definitions:
  httpserver.OrderRequest:
    properties:
      user_id:
        example: 1
        type: integer
    type: object
  httpserver.OrderResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      state_id:
        type: integer
      total_amount:
        type: number
      user_id:
        type: integer
    type: object
  httpserver.OrderStateRequest:
    properties:
      name:
        example: в обработке
        type: string
    type: object
  httpserver.OrderStateResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  httpserver.ProductRequest:
    properties:
      name:
        example: синхрофазотрон
        type: string
      price:
        example: 1245.65
        type: number
      provider_id:
        example: 1
        type: integer
      stock:
        example: 435
        type: integer
    type: object
  httpserver.ProductResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      provider_id:
        type: integer
      stock:
        type: integer
    type: object
  httpserver.ProviderRequest:
    properties:
      name:
        example: Microsoft
        type: string
      origin:
        example: Vietnam
        type: string
    type: object
  httpserver.ProviderResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      origin:
        type: string
    type: object
  httpserver.UserRequest:
    properties:
      login:
        example: cmd@cmd.ru
        type: string
      password:
        example: "123456"
        type: string
    type: object
  httpserver.UserResponse:
    properties:
      id:
        type: integer
      login:
        type: string
      password:
        type: string
      role:
        type: string
      token:
        type: string
    type: object
info:
  contact: {}
  description: An Shop service API in Go using Gin framework
  title: Shop Service API
  version: "1.0"
paths:
  /order:
    post:
      description: Создание заказа для дальнейшего его заполнения.
      parameters:
      - description: Create Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/httpserver.OrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.OrderResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Добавить заказ.
      tags:
      - Order
  /order/{id}:
    get:
      description: Return Order with "id" number.
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.OrderResponse'
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Посмотреть товар по его id.
      tags:
      - Order
  /orders:
    get:
      description: Return Orders list.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/httpserver.OrderResponse'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Получить список всех заказов.
      tags:
      - Order
  /orderstate:
    post:
      description: Создание типа статуса заказа.
      parameters:
      - description: Create Order State type
        in: body
        name: orderState
        required: true
        schema:
          $ref: '#/definitions/httpserver.OrderStateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.OrderStateResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Добавить тип статуса заказа.
      tags:
      - OrderState
  /orderstate/{id}:
    get:
      description: Return OrderState with "id" number.
      parameters:
      - description: OrderState ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.OrderStateResponse'
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Посмотреть тип статуса по его id.
      tags:
      - OrderState
  /orderstates:
    get:
      description: Return OrderStates list.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/httpserver.OrderStateResponse'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Получить список всех статусов.
      tags:
      - OrderState
  /product:
    post:
      description: Save register data of user in Repo.
      parameters:
      - description: Create product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/httpserver.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.ProductResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Добавить товар.
      tags:
      - Product
  /product/{product_id}:
    get:
      description: Return product with "id" number.
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.ProductResponse'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Посмотреть товар по его id.
      tags:
      - Product
  /products:
    get:
      description: Return products list.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/httpserver.ProductResponse'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      summary: Получить список всех товаров.
      tags:
      - Product
  /provider:
    get:
      description: Return Provider with "id" number.
      parameters:
      - description: id of the provider
        in: query
        name: id
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.ProviderResponse'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Посмотреть постащика по его id.
      tags:
      - Provider
    post:
      description: Save register data of user in Repo.
      parameters:
      - description: Create Provider
        in: body
        name: Provider
        required: true
        schema:
          $ref: '#/definitions/httpserver.ProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.ProviderResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Добавить поставщика.
      tags:
      - Provider
  /providers:
    get:
      description: Return Providers list.
      parameters:
      - description: limit records on page
        in: query
        name: limit
        required: true
        type: string
      - description: start of record output
        in: query
        name: offset
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/httpserver.ProviderResponse'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      summary: Получить список всех поставщиков.
      tags:
      - Provider
  /signin:
    post:
      description: Sign in as an existing user.
      parameters:
      - description: 'SignIn user. Логин указывается в формате электронной почты.
          Пароль не меньше 6 символов. Роль: super или regular'
        in: body
        name: UserRequest
        required: true
        schema:
          $ref: '#/definitions/httpserver.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Авторизоваться.
      tags:
      - Auth
  /signup:
    post:
      description: Sign up a new user in the system.
      parameters:
      - description: 'Create user. Логин указывается в формате электронной почты.
          Пароль не меньше 6 символов. Роль: super или regular'
        in: body
        name: UserRequest
        required: true
        schema:
          $ref: '#/definitions/httpserver.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/httpserver.UserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: error-to-create-domain-user
          schema:
            type: string
      summary: Загеристрироваться.
      tags:
      - Auth
  /user:
    get:
      description: Получить пользователя по его id ли логину.
      parameters:
      - description: id of the user
        in: query
        name: id
        type: string
      - description: login of the user
        in: query
        name: login
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.UserResponse'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Посмотреть пользователя по его id или логину.
      tags:
      - User
  /users:
    get:
      description: Return users list.
      parameters:
      - description: limit records on page
        in: query
        name: limit
        required: true
        type: string
      - description: start of record output
        in: query
        name: offset
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/httpserver.UserResponse'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
      summary: Получить список всех пользователей.
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
